const nodemailer = require('nodemailer');
const {ADMIN_EMAILS} = require("./utils");

function createTransporter() {
  return nodemailer.createTransport({
    host: process.env.SMTP_HOST,
    port: process.env.SMTP_PORT,
    secure: true,
    auth: {
      user: process.env.SMTP_USER,
      pass: process.env.SMTP_PASS
    },
  });
}

function createMessage({ to, subject, text, attachments }) {
  return {
    from: `"–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω –û–Ω–ª–∞–π–Ω" <${process.env.SMTP_USER}>`,
    replyTo: 'buznesplan@yandex.com',
    subject,
    text,
    to,
    attachments,
    headers: {
      'Date': new Date().toUTCString(),
      'Message-ID': `<${Date.now()}@biznesplan.online>`
    }
  };
}

module.exports = {
  async sendFull(buffersOrSingle, email) {
    console.log('üì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω –∫–ª–∏–µ–Ω—Ç—É...');

    const buffers = Array.isArray(buffersOrSingle) ? buffersOrSingle : [buffersOrSingle];

    const attachments = buffers.map((buffer, index) => ({
      filename: `–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω ${index + 1}.docx`,
      content: buffer
    }));

    const text = `
  –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!
  
  –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É. –í–æ –≤–ª–æ–∂–µ–Ω–∏–∏ ‚Äî –≤–∞—à${buffers.length > 1 ? '–∏' : ''} –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω${buffers.length > 1 ? '—ã' : ''}, –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω${buffers.length > 1 ? '—ã–µ' : '—ã–π'} —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å.
  
  –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º: buznesplan@yandex.com
  
  –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∫–æ–º–∞–Ω–¥–∞ –ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω –û–Ω–ª–∞–π–Ω.
    `;

    const transporter = createTransporter();

    // 1. –ü–∏—Å—å–º–æ –∫–ª–∏–µ–Ω—Ç—É
    const message = createMessage({
      to: email,
      subject: '–í–∞—à –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω',
      text,
      attachments
    });

    const info1 = await transporter.sendMail(message);
    console.log('üìß –ü–ª–∞–Ω(—ã) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω(—ã) –ø–æ–ª—É—á–∞—Ç–µ–ª—é:', email, info1.messageId);

    // 2. –ü–∏—Å—å–º–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –ë–ï–ó –≤–ª–æ–∂–µ–Ω–∏–π
    const adminMessage = createMessage({
      to: '1yoga@mail.ru',
      subject: `–ü–ª–∞–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É ${email}`,
      text: `
  [–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ]
  
  –ö–ª–∏–µ–Ω—Ç—É ${email} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω (${buffers.length} —Ñ–∞–π–ª${buffers.length > 1 ? '–∞' : ''}) –≤ ${new Date().toLocaleString('ru-RU')}.
    
  –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ.
      `.trim()
    });

    const info2 = await transporter.sendMail(adminMessage);
    console.log('üì• –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', info2.messageId);
  },

  async sendToAdminsOnly(buffersArray, userEmail) {
    const transporter = createTransporter();

    const attachments = buffersArray.map((buffer, index) => ({
      filename: `–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω ${index + 1}.docx`,
      content: buffer
    }));

    const count = buffersArray.length;
    const subject = `üìÑ ${count} –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω${count > 1 ? '–∞' : ''} –¥–ª—è ${userEmail}`;
    const text = `–ö–ª–∏–µ–Ω—Ç: ${userEmail}\n–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ ‚Äî ${count} –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω${count > 1 ? '–∞' : ''}.`;


    for (const adminEmail of ADMIN_EMAILS) {
      const fullMsg = createMessage({
        to: adminEmail,
        subject: subject,
        text: text,
        attachments
      });

      await transporter.sendMail(fullMsg);
      console.log('–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', adminEmail);
    }
  }
};
