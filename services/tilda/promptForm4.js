const { buildIdeasPrompt2, buildPlanPrompt2 } = require("../utils");
const generatePlanTilda = require('../openai');

async function generatePromptForm4(data) {
  console.log('üöÄ –°—Ç–∞—Ä—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ prompt–æ–≤ –¥–ª—è form4...');
  console.log('üì¨ –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(data, null, 2));

  const ideasPrompt = buildIdeasPrompt2(data);

  // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å 3 –∏–¥–µ—è–º–∏
  const ideasText = await generatePlanTilda(ideasPrompt);

  // 2. –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º –∏–¥–µ–π
  const ideaBlocks = ideasText
    .split(/#\s+–ò–¥–µ—è\s+‚Ññ\d+/)
    .map(s => s.trim())
    .filter(Boolean);

  if (ideaBlocks.length !== 3) {
    console.warn('‚ö†Ô∏è –û–∂–∏–¥–∞–ª–æ—Å—å 3 –∏–¥–µ–∏, –Ω–æ –ø–æ–ª—É—á–µ–Ω–æ:', ideaBlocks.length);
  }

  const result = ideaBlocks.map((idea, i) => {
    return buildPlanPrompt2(data, idea, i);
  });

  console.log('‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è 3 prompt–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n');

  return result;
}

module.exports = generatePromptForm4;
